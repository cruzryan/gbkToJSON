package main

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"log"
	"strings"
)

func getFileData(path string) string {
	bytes, err := ioutil.ReadFile(path)
	if err != nil {
		log.Fatal(err)
	}

	return string(bytes)
}

func smartFind() {

	words := []string{
		"LOCUS",
		"DEFINITION",
	}

	var word_found strings.Builder
	var content strings.Builder

	for m := 0; m < len(words); m++ {

	}

	/*
		for each word {
			for k := 0; k < len(word); k++ {
				if word[:-k] == file[pos-k] {
				}else{
					continue
				}
			}
		}

	*/
}

func buildStruct() map[string]interface{} {

	plasmid := map[string]interface{}{}

	string_data := getFileData("tests_reSources\\addgeneplasmid.gbk")

	file := []rune(string_data)

	for i := 0; i < len(file); i++ {

	}

	return plasmid
}

func prettyPrint(data interface{}) {
	var p []byte
	//    var err := error
	p, err := json.MarshalIndent(data, "", "\t")
	if err != nil {
		fmt.Println(err)
		return
	}
	fmt.Printf("%s \n", p)
}

func main() {

	plasmid := buildStruct()

	prettyPrint(plasmid)

}
